plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
}

android {
    compileSdkVersion  rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.sunragav.scalablecapital"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.appVersionCode
        versionName rootProject.ext.appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug{
            buildConfigField("String", "BASE_URL", "\"${debugBaseUrl}\"")
            buildConfigField("String", "OWNER", "\"${debugOwner}\"")
            buildConfigField("String", "AUTHORISATION", "\"${debugAuth}\"")
            buildConfigField("String", "AUTHORISATION_PREFIX", "\"${authPrefix}\"")
        }
        release {
            buildConfigField("String", "BASE_URL", "\"${prodBaseUrl}\"")
            buildConfigField("String", "OWNER", "\"${prodOwner}\"")
            buildConfigField("String", "AUTHORISATION", "\"${prodAuth}\"")
            buildConfigField("String", "AUTHORISATION_PREFIX", "\"${authPrefix}\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    // Dagger dependency injection
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"

    implementation "javax.inject:javax.inject:$javaxInjectVersion"

    // Arch paging
    implementation "androidx.paging:paging-runtime-ktx:$archPagingVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewModelVersion"


    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit2Version"
    implementation "com.squareup.retrofit2:converter-moshi:$moshiRetrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit2Version"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineAndroidVersion"


    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // moshi
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"

    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    //glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"


    //timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation "androidx.appcompat:appcompat:1.3.1"
    implementation "androidx.recyclerview:recyclerview:1.2.1"

    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'

    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "androidx.paging:paging-common-ktx:$archPagingVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}